{"pageProps":{"post":{"frontMatter":{"dirName":"certificate","contentNo":6,"mainCategory":"자격증","tag":["테스트","실기"],"title":"[test]테스트6","updated":"2023-04-27","image":"프로그래밍.png","isFeatured":true},"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    ul: \"ul\",\n    li: \"li\",\n    a: \"a\",\n    strong: \"strong\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(\"span\", {\n      style: {\n        backgroundColor: \"#000\",\n        borderRadius: '10%',\n        color: '#fff',\n        padding: '0.4rem',\n        fontSize: \"1.2rem\",\n        fontWeight: \"900\"\n      },\n      children: \"정보처리기사\"\n    }), \"\\n\", _jsx(\"br\", {}), \"\\n\", _jsx(\"br\", {}), \"\\n\", _jsx(\"h2\", {\n      children: _jsx(\"strong\", {\n        children: \"관계대수는\"\n      })\n    }), \"\\n\", _jsx(\"br\", {}), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"관계형 데이터베이스에서 원하는 정보와 그 정보를 얻기 위해 어떻게 해야하는 가를 명세하는 절차적인 언어이다.\", \"\\n\", _jsx(\"br\", {}), \"\\n\", _jsx(\"br\", {}), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"관계대수를 통해 릴레이션을 원하는 \", _jsx(_components.a, {\n          href: \"#%EB%A6%B4%EB%A0%88%EC%9D%B4%EC%85%98\",\n          children: _jsx(_components.strong, {\n            children: \"릴레이션\"\n          })\n        }), \"으로 연산 도출할 수 있다.      \", _jsx(\"br\", {}), _jsx(\"br\", {})]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"관계대수에는 순수 관계 연산자와 일반 집합 연산자가 있다.\", \"\\n\", _jsx(\"br\", {}), \"\\n\", _jsx(\"br\", {}), \"\\n\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(\"br\", {}), \"\\n\", _jsx(\"hr\", {}), \"\\n\", _jsx(\"br\", {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}},"slug":"test6"}},"__N_SSG":true}